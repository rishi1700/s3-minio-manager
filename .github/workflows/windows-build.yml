name: Build Windows EXE
on: [workflow_dispatch]

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up venv & install deps
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip
          pip install pillow pyinstaller minio urllib3 tqdm

      - name: Prepare icon (always create a valid ICO)
        shell: pwsh
        run: |
          .\.venv\Scripts\Activate.ps1
          New-Item -ItemType Directory -Path .build -Force | Out-Null
          @'
import os
from PIL import Image

OUT = os.path.join(".build", "icon.ico")

def make_ico_from_png(src, out):
    img = Image.open(src).convert("RGBA")
    sizes = [(16,16),(24,24),(32,32),(48,48),(64,64),(128,128),(256,256)]
    img.save(out, sizes=sizes)
    print(f"✅ Generated ICO from {src} -> {out}")

def reencode_ico(src, out):
    img = Image.open(src)
    if img.format != "ICO":
        raise ValueError("Not an ICO format")
    sizes = [(16,16),(24,24),(32,32),(48,48),(64,64),(128,128),(256,256)]
    try:
        img.save(out, sizes=sizes)
    except Exception:
        base = img.copy().convert("RGBA")
        base.save(out, sizes=sizes)
    print(f"✅ Re-encoded ICO: {out}")

if os.path.exists("icon.png"):
    make_ico_from_png("icon.png", OUT)
elif os.path.exists("icon.ico"):
    try:
        reencode_ico("icon.ico", OUT)
    except Exception:
        im = Image.open("icon.ico").convert("RGBA")
        sizes = [(16,16),(24,24),(32,32),(48,48),(64,64),(128,128),(256,256)]
        im.save(OUT, sizes=sizes)
        print(f"⚠️ Coerced existing ICO into valid multi-size ICO: {OUT}")
else:
    # No icon found; mark to skip --icon
    with open(os.environ["GITHUB_ENV"], "a") as f:
        f.write("NO_ICON=1`n")
    print("❌ No icon.png or icon.ico found; will build without an icon.")
'@ | Set-Content -Path .build\make_icon.py -Encoding UTF8

          python .build\make_icon.py

      - name: Build EXE with PyInstaller
        shell: pwsh
        run: |
          .\.venv\Scripts\Activate.ps1
          if ($env:NO_ICON -eq "1") {
            pyinstaller --noconfirm --clean --windowed `
              --name "S3_MinIO_Manager" `
              --add-data "s3.py;." `
              --hidden-import minio `
              --hidden-import urllib3 `
              --hidden-import tqdm `
              app.py
          } else {
            pyinstaller --noconfirm --clean --windowed `
              --name "S3_MinIO_Manager" `
              --icon ".build\icon.ico" `
              --add-data "s3.py;." `
              --hidden-import minio `
              --hidden-import urllib3 `
              --hidden-import tqdm `
              app.py
          }

      - uses: actions/upload-artifact@v4
        with:
          name: S3_MinIO_Manager-win
          path: dist/S3_MinIO_Manager/**
